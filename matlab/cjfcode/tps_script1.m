%% Use these for test images%N = 256;%img_src = zeros(N,N);%img_trg = zeros(N,N);%img_src(N/2-20:N/2+20,N/2-20:N/2+20) = 1;%img_trg(N/2-80:N/2+80,N/2-80:N/2+80) = 1;%% Use these for real images[file1,path1]=uigetfile({'*.bmp';'*.jpg';'*.tif'},'Select Image to Deform'...    ,'~/Desktop');[file2,path2]=uigetfile({'*.bmp';'*.jpg';'*.tif'},'Select Target Image'...    ,path1);i1 = imread(sprintf('%s/%s',path1,file1));i2 = imread(sprintf('%s/%s',path2,file2));if size(i1,3)==3    i1=mean(i1,3);endif size(i2,3)==3    i2=mean(i2,3);endimg_src = double((i1));clear i1;img_trg = double((i2));clear i2;img_src = img_src./max(max(img_src));img_trg = img_trg./max(max(img_trg));%%draw_points = 1;% if 1, draw corresponding points in resulting images figure(1);imagesc(img_src);colormap gray;truesize;axis offset(gcf,'Name','Source image to be deformed')figure(2);imagesc(img_trg);colormap gray;truesize;axis offset(gcf,'Name','Target image to which source image is deformed')[input_points,base_points]=cpselect(img_src,img_trg,'wait',logical(1));PY = input_points';PX = base_points';%% Npts = size(PX,2);K = zeros(Npts,Npts);for i=1:Npts    for j = 1:Npts                K(i,j) = tps_rbf(norm(PX(:,i)-PX(:,j)));    endendP = [ones(Npts,1),PX'];L = [K,P];btm = [P',zeros(3,3)];L = [L;btm];Y_t = [PY';zeros(3,2)];W = L\Y_t;%%[X,Y] = meshgrid(1:size(img_trg,2),1:size(img_trg,1));tmp_fx = W(Npts+1,1)+W(Npts+2,1)*X+W(Npts+3,1)*Y;tmp_fy = W(Npts+1,2)+W(Npts+2,2)*X+W(Npts+3,2)*Y;for k=1:Npts    Xt = X - PX(1,k);    Yt = Y - PX(2,k);    Rt = sqrt( Xt.^2 + Yt.^2  );    tmp_fx = tmp_fx + W(k,1)*tps_rbf(Rt);    tmp_fy = tmp_fy + W(k,2)*tps_rbf(Rt);end%%grid_img = img_trg*0;grid_img(1:15:size(grid_img,1),:) = 1;grid_img(:,1:15:size(grid_img,1)) = 1;Z = ones(3,3);Z = Z./(sum(sum(Z)));grid_img = conv2(grid_img,Z,'same');result = interp2(img_src,tmp_fx,tmp_fy,'linear',0);result_grid = interp2(grid_img,tmp_fx,tmp_fy,'linear',0);figure(3);imagesc(result);colormap gray;truesize;axis offset(gcf,'Name','Source image warped to target image')figure(4);imagesc(result_grid);colormap gray;truesize;axis offset(gcf,'Name','Grid representing deformation')if draw_points    figure(1);hold on    figure(2);hold on    figure(3);hold on    figure(4);hold on    for k=1:Npts        figure(1)        plot(PY(1,k),PY(2,k),'ro','MarkerSize',10,'MarkerFaceColor','r')        figure(2)        plot(PX(1,k),PX(2,k),'ro','MarkerSize',10,'MarkerFaceColor','r')        figure(3)        plot(PX(1,k),PX(2,k),'ro','MarkerSize',10,'MarkerFaceColor','r')        figure(4)        plot(PX(1,k),PX(2,k),'ro','MarkerSize',10,'MarkerFaceColor','r')    end    figure(2);hold off    figure(3);hold off    figure(4);hold off    end        