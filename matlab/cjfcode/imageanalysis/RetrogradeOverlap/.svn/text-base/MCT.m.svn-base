function[MCT] = MCT(inputimage);if length(size(inputimage)) == 2;     i = inputimage;     bd = 0:255;     i = reshape(i,1, prod(size(i)));     hi = histc(i, bd);     m = sum(hi.*bd)/sum(hi);     nm = sum(hi);     nbd = bd - m;     selfcc =  ((nbd.*nbd)*hi');         fbe = zeros(1,256);     for jj = 2:256;         beuh = zeros(1,256); beuh(1,jj:end) = hi(1,jj:end);         benh = 0:255; benh = benh - m;                 tvu = zeros(1,256); tvu(1,jj:end) = hi(1,jj:end);         tvl = zeros(1,256); tvl(1,1:jj-1) = hi(1,1:jj-1);        njl = sum(tvl);         nju = sum(tvu);        lv = (0-(nju/nm));        uv = (1-(nju/nm));                fbe(1,jj-1) = (beuh*benh')/sqrt(selfcc*(((nm-nju)*(nju))/nm));                        fbe(isinf(fbe))=0;    end;     [bev bep] = max(fbe);    tv = bep-1;     MCT.image = inputimage > tv; MCT.image = double(MCT.image);     MCT.rtv = tv; MCT.gtv = tv; MCT.btv = tv;    MCT.rcc = bev; MCT.gcc = bev; MCT.bcc = bev;elseif length(size(inputimage)) == 3;     MCT.image = zeros(size(inputimage));     clear tvh; clear cch;     tvh = zeros(1,3); cch = zeros(1,3);     for cc = 1:3;         i = inputimage(:,:,cc);         if max(max(i)) == 0;             tvh(1,cc) = 0;             cch(1,cc) = 0;            MCT.image(:,:,cc) = inputimage(:,:,cc);         else            bd = 0:255;             i = reshape(i,1, prod(size(i)));             hi = histc(i, bd);             m = sum(hi.*bd)/sum(hi);             nm = sum(hi);             nbd = bd - m;             selfcc =  ((nbd.*nbd)*hi');                         fbe = zeros(1,256);             for jj = 2:256;                 beuh = zeros(1,256); beuh(1,jj:end) = hi(1,jj:end);                 benh = 0:255; benh = benh - m;                 be1(1,jj) = beuh*benh';                tvu = zeros(1,256); tvu(1,jj:end) = hi(1,jj:end);                 tvl = zeros(1,256); tvl(1,1:jj-1) = hi(1,1:jj-1);                njl = sum(tvl);                 nju = sum(tvu);                lv = (0-(nju/nm));                uv = (1-(nju/nm));                               fbe(1,jj-1) = (beuh*benh')/sqrt(selfcc*(((nm-nju)*(nju))/nm));                fbe(isinf(fbe))=0;            end;                         [bev bep] = max(fbe);            tv = bep-1;             MCT.image(:,:,cc) = inputimage(:,:,cc) > tv; MCT.image(:,:,cc) = double(MCT.image(:,:,cc));             tvh(1,cc) = tv;            cch(1,cc) = bev;         end    end        MCT.rtv = tvh(1,1);          MCT.gtv = tvh(1,2);         MCT.btv = tvh(1,3);         MCT.rcc = cch(1,1);        MCT.gcc = cch(1,2);        MCT.bcc = cch(1,3); end                                                                                                                                                                